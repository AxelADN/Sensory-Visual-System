/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package middlewareVision.nodes.External;

import VisualMemory.V1Cells.V1Bank;
import org.opencv.core.Mat;
import utils.SpecialKernels;

/**
 *
 * @author Laptop
 */
public class AttentionTrigger extends javax.swing.JFrame {

    FeedbackProccess proccess;

    /**
     * Creates new form AttentionTrigger
     */
    public AttentionTrigger(FeedbackProccess proccess) {
        this.proccess = proccess;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        V1SimpleCellsAll = new javax.swing.JButton();
        V1ComplexCells = new javax.swing.JButton();
        V1HyperComplex = new javax.swing.JButton();
        V1SimpleCellsOrientation = new javax.swing.JButton();
        V2AngleAll = new javax.swing.JButton();
        V2Angle = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Modulation test");

        V1SimpleCellsAll.setText("V1 Simple");
        V1SimpleCellsAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V1SimpleCellsAllActionPerformed(evt);
            }
        });

        V1ComplexCells.setText("V1 Complex");
        V1ComplexCells.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V1ComplexCellsActionPerformed(evt);
            }
        });

        V1HyperComplex.setText("V1 Hypercomplex");
        V1HyperComplex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V1HyperComplexActionPerformed(evt);
            }
        });

        V1SimpleCellsOrientation.setText("V1 Orientation");
        V1SimpleCellsOrientation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V1SimpleCellsOrientationActionPerformed(evt);
            }
        });

        V2AngleAll.setText("V2 Feedback");
        V2AngleAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V2AngleAllActionPerformed(evt);
            }
        });

        V2Angle.setText("V2 Angle feedback");
        V2Angle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V2AngleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(V1SimpleCellsAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(V1ComplexCells, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(V1HyperComplex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(V1SimpleCellsOrientation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(V2AngleAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(V2Angle))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(V1SimpleCellsAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(V1SimpleCellsOrientation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(V1ComplexCells)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(V1HyperComplex)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(V2AngleAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(V2Angle)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Send feedback for all simple cells
     * @param evt 
     */
    private void V1SimpleCellsAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V1SimpleCellsAllActionPerformed

        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 10, 10, 1);
        proccess.addToV1SimpleCells(filter, 0.8, 0.4, null);
    }//GEN-LAST:event_V1SimpleCellsAllActionPerformed

    /**
     * Send feedback to all complex cells
     * @param evt 
     */
    private void V1ComplexCellsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V1ComplexCellsActionPerformed
        // TODO add your handling code here:
        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 20, 10, 1);
        proccess.addToV1ComplexCells(filter, 0.8, 0.4, null);
    }//GEN-LAST:event_V1ComplexCellsActionPerformed

    /**
     * Send feedback to all hypercomplex cells
     * @param evt 
     */
    private void V1HyperComplexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V1HyperComplexActionPerformed
        // TODO add your handling code here:
        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 20, 10, 1);
        proccess.addToV1HyperComplexCells(filter, 0.5, 0.4, null);
    }//GEN-LAST:event_V1HyperComplexActionPerformed

    /**
     * Send feedback to simple cells with a specific orientation
     * @param evt 
     */
    private void V1SimpleCellsOrientationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V1SimpleCellsOrientationActionPerformed
        // TODO add your handling code here:
        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 10, 10, 1);
        proccess.addToV1SimpleCellsOrientation(filter, 0.8, 0.2, null, 1);
    }//GEN-LAST:event_V1SimpleCellsOrientationActionPerformed

    /**
     * Send feedback to all V2 angle cells
     * @param evt 
     */
    private void V2AngleAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V2AngleAllActionPerformed
        // TODO add your handling code here:
        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 20, 10, 1);
        proccess.addToV2(filter, 0.5, 0.3, null);
    }//GEN-LAST:event_V2AngleAllActionPerformed

    /**
     * Send feedback to specific aperture V2 Angle cells
     * @param evt 
     */
    private void V2AngleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V2AngleActionPerformed
        // TODO add your handling code here:
        Mat filter = SpecialKernels.getGauss(V1Bank.SC[0][0].Even[0].mat.size(), 20, 10, 1);
        proccess.addToV2Angle(null, 0.5, 0.3, filter, 2);
    }//GEN-LAST:event_V2AngleActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton V1ComplexCells;
    private javax.swing.JButton V1HyperComplex;
    private javax.swing.JButton V1SimpleCellsAll;
    private javax.swing.JButton V1SimpleCellsOrientation;
    private javax.swing.JButton V2Angle;
    private javax.swing.JButton V2AngleAll;
    // End of variables declaration//GEN-END:variables
}
