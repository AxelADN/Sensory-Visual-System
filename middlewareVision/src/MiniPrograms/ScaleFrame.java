/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MiniPrograms;

import java.math.RoundingMode;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JTextField;
import utils.FileUtils;

/**
 * Class used for fill the values of the filter scales
 * @author HumanoideFilms
 */
public class ScaleFrame extends javax.swing.JFrame {

    /**
     * Field in which the values will be settled
     */
    JTextField field;

    /**
     * Creates new form ScaleFrame
     */
    public ScaleFrame(JTextField field) {
        this.field = field;
        initComponents();
        readValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        from = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        to = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        incf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setUndecorated(true);
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("From:");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        from.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 32;
        jPanel1.add(from, gridBagConstraints);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("To:");
        jPanel1.add(jLabel2, new java.awt.GridBagConstraints());

        to.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 36;
        jPanel1.add(to, gridBagConstraints);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Inc:");
        jPanel1.add(jLabel3, new java.awt.GridBagConstraints());

        incf.setText("10");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 31;
        jPanel1.add(incf, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(58, 112, 58));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Accept");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new java.awt.GridBagConstraints());

        jButton2.setBackground(new java.awt.Color(83, 38, 22));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new java.awt.GridBagConstraints());

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * It creates a set of float values from a range of floats with a certain increment<br>
     * it omits the value 1 because the original receptive field file has the scale 
     * of 1
     * @param evt 
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        String v = "";
        float r1 = Float.parseFloat(from.getText().trim());
        float r2 = Float.parseFloat(to.getText().trim());
        float inc = Float.parseFloat(incf.getText().trim());
        float value = r1;
        if (r2 > r1 && (r1 > 0) && (r2 > 0)) {
            v = "";
            while (value <= r2) {
                if (rFloat(value) != 1) {
                    v = v + rFloat(value) + ",";
                }
                value = value + inc;
            }
            if (rFloat(r2) - rFloat(value - inc) != 0) {
                if (rFloat(r2) != 1) {
                    v = v + rFloat(r2) + ",";
                }
            }
            v = v.substring(0, v.length() - 1);
            field.setText(v);
            writeValues(from.getText(), to.getText(), incf.getText());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * It formats the float value for shorten to two decimals
     * @param value float value
     * @return formated float value
     */
    float rFloat(float value) {
        return Float.valueOf(String.format(Locale.getDefault(), "%.2f", value));
    }

    /**
     * It saves the values from the text field in a file in order to be used in
     * the next time
     * @param v1 value from the text field
     * @param v2 value from the text field
     * @param v3  value from the text field
     */
    void writeValues(String v1, String v2, String v3) {
        FileUtils.write("ConfigFiles\\scaleValues", v1 + "\n" + v2 + "\n" + v3, "txt");
    }

    /**
     * Read the values of the fields from a file and then it puts the values in these
     * fields
     */
    void readValues() {
        try {
            String[] values = FileUtils.fileLines("ConfigFiles\\scaleValues.txt");
            from.setText(values[0]);
            to.setText(values[1]);
            incf.setText(values[2]);
        } catch (Exception ex) {
            writeValues("0.1", "1", "0.2");
            readValues();
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField from;
    private javax.swing.JTextField incf;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField to;
    // End of variables declaration//GEN-END:variables
}
